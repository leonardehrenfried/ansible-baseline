proxy_cache_path {{ tileserver_cache_dir }} levels=1:2 keys_zone=tiles:8m max_size=20g inactive=180d use_temp_path=off;

server {
  listen {{ tileserver_cache_port }};
  listen [::]:{{ tileserver_cache_port }};

  error_page 403 /unauthorized.png;
  location = /unauthorized.png {
      ssi on;
      internal;
      auth_basic off;
      root /var/www/html;
  }

  # sprites are special PNGs that must not be cached
  location ~* /styles/.*sprite(@2x)?\.png$ {
    proxy_pass          http://127.0.0.1:{{ tileserver_port }};
  }

{% for cache in tileserver_cache_settings %}
  location ~* /styles/.*\.({{ cache["filetype"] }})$ {
    proxy_pass          http://127.0.0.1:{{ tileserver_port }};
    # configure server-side cache
    proxy_cache         tiles;
    proxy_cache_valid   200 {{ cache["server_cache"] }};
    proxy_buffering     on;

    # whilst tileserver recalculates the new tile, serve the old tile instead
    proxy_cache_background_update on;
    # only one request per tile
    proxy_cache_lock              on;
    proxy_cache_use_stale         error timeout invalid_header updating http_500 http_502 http_503 http_504;

    add_header          X-Cached $upstream_cache_status;
    # cache client-side for 6 hours
    add_header          "Cache-Control" "public, max-age={{ cache["browser_cache"] }}, must-revalidate";

    valid_referers none blocked {{ tileserver_allowed_referrers |join(' ') }};

    if ($invalid_referer){
      return 403;
    }
  }
{% endfor %}
  location / {
    proxy_pass          http://127.0.0.1:{{ tileserver_port }}/;
    # configure server-side cache
    proxy_cache         tiles;
    proxy_cache_valid   200 10s;
    proxy_buffering     on;

    # only one request per tile
    proxy_cache_lock              on;
    proxy_cache_use_stale         error timeout invalid_header updating http_500 http_502 http_503 http_504;
    add_header          X-Cached $upstream_cache_status;
  }
}
